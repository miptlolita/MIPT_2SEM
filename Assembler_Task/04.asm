;Выполнил Протас Николай, 456 группа, ФФКЭ
;Ответ: данная программа находит факториал введённого числа.

	extern	printf                 ;Экспортируем функцию printf языка C.

	section .data                  ;Начало секции данных.
fmt:	db	'Stage = %d', 10, 0    ;
resfmt:	db	'Res = %d', 10, 0      ;Строка формата вывода.
                      
	section .text                  ;Начало секции исходного кода.
                        
	global main                    ;Обьявляем метку main глобальной.
 
main:                                  ;Обьявляем метку main.
	push	4                      ;Кидаем в стек число 4.
	call	factorial              ;Вызываем часть кода по метке factorial.
	add	esp, 4                 ;Убираем чиселку 4 из стека

	push	dword eax              ;Кидаем в стек значение регистра eax.
	push	resfmt                 ;Кидаем в стек строку, форматирующую 'красивый' вывод.
	call	printf                 ;Вызываем функцию printf.
	add	esp, 8                 ;Чистим за собой стек.
                     
	mov	eax,0                  ;Закидываем 0 в регистр eax.
	ret                            ;Возврат из процедуры, вызванной call.

factorial:                             ;Обьявляем метку factorial.
        mov     eax, [esp+4]           ;Кидаем в регистр eax введённую нами чиселку.
	push	eax                    ;Кидаем в стек значение eax.
	push	dword eax              ;Кидаем туда же отформатированное до численного значение eax.
	push	fmt                    ;Кидаем форматирующую строку 'стадии'.
	call	printf                 ;Вызываем функцию printf.
	add	esp, 8                 ;Чистим после себя стек.
	pop	eax                    ;Забираем из стека значение eax.
        cmp	eax, 1                 ;Сравниваем eax с единицей.
        jnle	L1                     ;Если результат последней операции больше, то прыгаем в L1. (команда jump if not less or equal)
        mov	eax, 1                 ;Кидаем в eax чиселку 1.
        jmp	L2                     ;Прыгаем в L2.
L1:                                    ;Обьявляем метку L1.
	dec	eax                    ;Уменьшаем eax на единицу.
	push	eax                    ;Кидаем значение eax в стек.
	call	factorial              ;Вызываем часть кода по метке factorial.
	add	esp, 4                 ;Чистим за собой стек.
	imul	eax, [esp+4]           ;Умножаем значение в регистре eax на следующую чиселку, то бишь значение eax.
L2:                                    ;Обьявляем метку L2.
	ret                            ;Возврат из процедуры, вызванной call.
